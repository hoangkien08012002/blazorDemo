@page "/form"
@using System.ComponentModel.DataAnnotations
<h3>Form</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="loginModel" OnSubmit="HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Email:</label>
        <InputText class="form-control" @bind-Value="loginModel.Email" />
        <ValidationMessage For="@(() => loginModel.Email)" />
    </div>

    <div class="mb-3">
        <label>Password:</label>
        <InputText type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button class="btn btn-primary" type="submit">Login</button>
</EditForm>


@code {
    private LoginModel loginModel = new();
    private string ErrorMessage;
    string name = "123";
    private async Task HandleLogin()
    {
        if (loginModel.Email == "k@gmail.com" && loginModel.Password == "123")
        {
            ErrorMessage = null;
            NavigationManager.NavigateTo("/counter");
        }
        else
        {
            ErrorMessage = "Invalid email or password.";
        }
    }

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;
    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; } = "";
    }
}
